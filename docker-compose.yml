# Docker-compose loads by default the variables from .env file.
version: '3.8'
services:
  postgrest:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    environment:
      # String DB connection used by PostgREST to connect to postgres
      PGRST_DB_URI: ${PGRST_DB_URI}
      # Address were the OpenAPI will be served
      PGRST_OPENAPI_SERVER_PROXY_URI: $PGRST_OPENAPI_SERVER_PROXY_URI
      # DB role that will be used for public API access
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      # List with one or more schemas that will be served as API by PostgREST
      PGRST_DB_SCHEMAS: ${PGRST_DB_SCHEMAS}
    depends_on:
      - postgres
    volumes:
      - "./config/timezone:/etc/timezone:ro"
  
  postgres:
    image: postgres:14.1-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - "./config/timezone:/etc/timezone:ro"
      - pgdata_volume:/var/lib/postgresql/data
      # Script with initial data to be executed just in the first boot
      - ./sql/:/docker-entrypoint-initdb.d/

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      # Connection from Swagger to PostgREST OpenAPI endpoint
      API_URL: http://localhost:3000/
    


volumes:
  pgdata_volume:
    driver: local